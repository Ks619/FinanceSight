pipeline {
    agent any

    environment {
        // GCP project ID
        PROJECT_ID = "financesight-463118"
        
        // Docker image details
        IMAGE_NAME = "fetch-crypto"
        IMAGE_TAG = "latest"
        IMAGE_URI = "gcr.io/${PROJECT_ID}/${IMAGE_NAME}:${IMAGE_TAG}"
    }

    stages {
        stage('Clone Repository') {
            steps {
                echo "Cloning source code from Git repository..."
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('services/fetch_crypto') {
                    script {
                        echo "Building Docker image: ${IMAGE_URI}"
                        sh "docker build -t ${IMAGE_URI} ."
                    }
                }
            }
        }

        stage('Authenticate with Google Cloud') {
            steps {
                // Use the service account JSON credentials stored in Jenkins
                withCredentials([file(credentialsId: 'GCP_KEY_FILE', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
                    script {
                        sh '''
                            echo "Authenticating with Google Cloud..."
                            gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
                            gcloud config set project ${PROJECT_ID}
                            gcloud auth configure-docker --quiet
                        '''
                    }
                }
            }
        }

        stage('Push Docker Image to GCR') {
            steps {
                script {
                    echo "Pushing Docker image to Google Container Registry..."
                    sh "docker push ${IMAGE_URI}"
                }
            }
        }

        stage('Validate Kubernetes CronJob YAML (dry-run)') {
            steps {
                dir('services/fetch_crypto') {
                    echo "Validating Kubernetes YAML using kubectl dry-run"
                    // This will validate the YAML syntax without requiring an actual Kubernetes cluster
                    // If kubectl is not installed or the file is missing, the error will be skipped
                    sh "kubectl apply --dry-run=client -f fetch_crypto_cronjob.yaml || echo 'Dry-run skipped (kubectl not available)'"
                }
            }
        }
    }

    post {
        always {
            echo "Cleaning up local Docker image"
            // Remove local image after the pipeline to save space
            sh "docker rmi ${IMAGE_URI} || true"
        }
        success {
            echo "Pipeline completed successfully"
        }
        failure {
            echo "Pipeline failed"
        }
    }
}
