pipeline {
    agent any

    stages {
        stage('Clone Repository') {
            steps {
                checkout scm
            }
        }

        stage('Run Integration Tests') {
            steps {
                script {
                    // Down old containers
                    sh 'docker compose down -v || true'

                    // Build and run
                    sh 'docker compose up --build --abort-on-container-exit'

                    // Get aggregator exit code
                    def exitCode = sh(script: 'docker inspect aggregator --format="{{.State.ExitCode}}"', returnStdout: true).trim()
                    
                    if (exitCode != '0') {
                        error("Aggregator container exited with code ${exitCode}")
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up containers...'
            sh 'docker compose down -v'
        }
    }
}
