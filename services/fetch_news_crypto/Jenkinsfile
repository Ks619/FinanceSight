pipeline {
    agent any

    environment {
        COMPOSE_FILE = "docker-compose.yml"
        AGGREGATOR_SERVICE = "aggregator"
    }

    stages {
        stage('Run Tests via Docker Compose') {
            steps {
                dir('services/fetch_news_crypto') {
                    script {
                        echo "Building and running all services using docker-compose..."

                        // Run the whole stack, aggregator will exit after tests
                        sh "docker compose -f ${COMPOSE_FILE} up --build --abort-on-container-exit"

                        // Capture test result (aggregator container's exit code)
                        def aggregator_exit = sh(script: "docker compose -f ${COMPOSE_FILE} ps -q ${AGGREGATOR_SERVICE} | xargs docker inspect -f '{{.State.ExitCode}}'", returnStdout: true).trim()
                        
                        if (aggregator_exit != "0") {
                            error("Aggregator container exited with code ${aggregator_exit}")
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo "Cleaning up containers..."
            sh "docker compose -f ${COMPOSE_FILE} down -v"
        }
    }
}
